1) Singleman clearing build:

**DONE** a) Build new entry in unit-data hashmap. "CurrentBuilding". Default = "none"
**DONE** b) Build a "setCurrentBuilding" function that stores the object in a missionNameSpace variable.
    c) "setCurrentBuilding" should exclude units during house-clearing
**DONE** d) "setCurrentBuilding" should then store the var-name into the unitData hashmap (see param "a" here).
    e) Build a "getCurrentBuilding" method (probably unitData + getVariable)
**DONE** f) On unit killed delete the "CurrentBuilding" variable if != "none"
**50%** g) Update "CurrentBuilding" for all Units together with the grid-update
    h) When updating grid && "CurrentBuilding" also check "attackTarget" + distance2D ->"attackTarget".
    i) Build "clearing loop" function.

2) Singleman clearing Algorythm:
    if "attackTarget" == undefined -> if near-known-enemy -> assign near-known-enemy as "attackTarget"
    if "attackTarget" != undefined && distance < 100(param)
    -> getCurrentBuilding of "attackTarget"
    if "CurrentBuilding" != "none"
    -> ***Maybe bad idea*** forceMove to within 20m of building
    -> Activate "clearing loop".

3) Clearing loop:
*if !alive target -> return to normal
*if !alive unit -> abort
*if outSide(check needed) house doMove to house 
*if dist-house < 10 -> doMove (getPos target)
* force (spam) aware-behaviour
* spam doFire -> target

4) Inside-house check.
   *if distance > size*2 -> false
   *else -> use killZone-kid check to verify if inside
